{"version":3,"sources":["components/Navigation/Navigation.tsx","pages/Home/Home.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonRow/PersonRow.tsx","pages/PeopleTable/PeopleTable.tsx","pages/NotFound/NotFound.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","cn","to","Home","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","PersonLink","person","slug","sex","name","PersonRow","motherInList","fatherInList","currentSlug","useParams","born","died","PeopleTable","useState","isLoading","setIsLoading","error","setError","people","setPeople","loadPeople","loadedPeople","useEffect","length","map","find","human","motherName","fatherName","NotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9b49ec20.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (\n              cn(\n                'navbar-item',\n                {\n                  'has-background-grey-lighter': isActive,\n                },\n              ))}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (\n              cn(\n                'navbar-item',\n                {\n                  'has-background-grey-lighter': isActive,\n                },\n              ))}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const Home: React.FC = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\nconst API_URL\n = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Connection issue');\n      }\n\n      return response.json();\n    });\n}\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n  >\n    {person.name}\n  </Link>\n);\n","import { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  motherInList: Person | null;\n  fatherInList: Person | null;\n};\n\nexport const PersonRow: React.FC<Props> = ({\n  person,\n  motherInList,\n  fatherInList,\n}) => {\n  const { slug: currentSlug } = useParams();\n  const {\n    sex,\n    born,\n    died,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': slug === currentSlug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {motherInList ? (\n          <PersonLink person={motherInList} />\n        ) : '-'}\n      </td>\n\n      <td>\n        {fatherInList ? (\n          <PersonLink person={fatherInList} />\n        ) : '-'}\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PersonRow } from '../../components/PersonRow';\n\nexport const PeopleTable: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const loadPeople = async (): Promise<void> => {\n    try {\n      setIsLoading(true);\n\n      const loadedPeople = await getPeople();\n\n      setPeople(loadedPeople);\n\n      setError(false);\n    } catch {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length ? (\n            !error\n            && !isLoading\n            && (\n              <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n            )\n          ) : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => (\n                  <PersonRow\n                    key={person.slug}\n                    motherInList={\n                      people.find(\n                        (human) => human.name === person.motherName,\n                      ) || null\n                    }\n                    fatherInList={\n                      people.find(\n                        (human) => human.name === person.fatherName,\n                      ) || null\n                    }\n                    person={person}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFound: React.FC = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { Home } from './pages/Home';\nimport { PeopleTable } from './pages/PeopleTable';\nimport { NotFound } from './pages/NotFound';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeopleTable />} />\n            <Route path=\":slug\" element={<PeopleTable />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement).render(\n  <Router>\n    <App />\n  </Router>,\n);\n"],"sourceRoot":""}